name: Python

on:
  push:
    branches:
      - "**"
    paths:
      - "app/**"
      - "migrations/**"
      - ".github/workflows/python.yml"
      - "requirements.txt"
      - "requirements-dev.txt"

jobs:
  Test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}
          restore-keys: pip-

      - name: Install Dependanices
        run: |
          pip install --upgrade pip wheel
          pip install -r requirements-dev.txt

      - name: Lint
        run: make lint

      - name: Test
        run: |
          flask db upgrade
          make test
          coverage xml
        env:
          DATABASE_URL: "postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres"
          BASIC_AUTH_USER: "user"
          BASIC_AUTH_PASS: "password"
          SECRET_HEADER: "TEST-HEADER"

      - name: Report Code Coverage
        uses: codecov/codecov-action@v3.1.0
        with:
          fail_ci_if_error: true